# 为了保证招聘信息的质量问题，公司为每个职位设计了打分系统，打分可以为正数，也
# 可以为负数，正数表示用户认可帖子质量，负数表示用户不认可帖子质量.打分的分数
# 根据评价用户的等级大小不定，比如可以为 -1分，10分，30分，-10分等。
# 假设数组A 记录了一条帖子所有打分记录，现在需要找出帖子曾经得到过最高的分数是多少，用于
# 后续根据最高分数来确认需要对发帖用户做相应的惩罚或奖励.其中，
# 最高分的定义为: 用户所有打分记录中，连续打分数据之和的最大值即认为是帖子曾经获得的最高分。
# 例如:帖子10001010近期的打 分记录为[1,1,-1,-10,11,4,-6,9,20,-10,-2],那么该条帖子曾经到达过的最高分数为 11+4+(-6)+9+20=38。
# 请实现一段代码，输入为帖子近期的打分记录，输出为当前帖子 得到的最高分数。

# 那么多都是废话 其实就是很经典的求一个array的subarray sum最大
# 维持两个变量 cur 和 max  cur记录每一次新进一个数 之后 累加和 如果这个累加和小于0 cur = 0  max记录cur累加和最大
# 这个解答不好想 但很好解释  如果每一个数都是正数 那么每个数相加 然后从第一个数 开始 肯定是正确的
# 如果有负数 那么加了这个负数 cur会减小 如果减小到负数 就把cur变回0 如果还是正的 就继续往后面加

def SubArrayMaxSum(array):
    cur = 0
    max = -float('Inf')
    for i in array:
        cur = cur + i
        if max < cur:
            max = cur

        if cur < 0:
            cur = 0
    return max

if __name__ == '__main__':
    matrix = [1,1,-1,-10,11,4,-6,9,20,-10,-2]
    max = SubArrayMaxSum(matrix)
    print(max)